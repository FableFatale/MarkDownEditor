import {
  _extends,
  init_extends
} from "./chunk-6PPQ322T.js";
import {
  HighlightStyle,
  syntaxHighlighting
} from "./chunk-NMHJYL2F.js";
import {
  EditorView
} from "./chunk-XTWMVKI7.js";
import {
  tags
} from "./chunk-RLBZCMVD.js";
import "./chunk-LK32TJAX.js";

// node_modules/@uiw/codemirror-theme-basic/esm/dark.js
init_extends();

// node_modules/@uiw/codemirror-themes/esm/index.js
var createTheme = (_ref) => {
  var {
    theme,
    settings = {},
    styles = []
  } = _ref;
  var themeOptions = {
    ".cm-gutters": {}
  };
  var baseStyle = {};
  if (settings.background) {
    baseStyle.backgroundColor = settings.background;
  }
  if (settings.backgroundImage) {
    baseStyle.backgroundImage = settings.backgroundImage;
  }
  if (settings.foreground) {
    baseStyle.color = settings.foreground;
  }
  if (settings.fontSize) {
    baseStyle.fontSize = settings.fontSize;
  }
  if (settings.background || settings.foreground) {
    themeOptions["&"] = baseStyle;
  }
  if (settings.fontFamily) {
    themeOptions["&.cm-editor .cm-scroller"] = {
      fontFamily: settings.fontFamily
    };
  }
  if (settings.gutterBackground) {
    themeOptions[".cm-gutters"].backgroundColor = settings.gutterBackground;
  }
  if (settings.gutterForeground) {
    themeOptions[".cm-gutters"].color = settings.gutterForeground;
  }
  if (settings.gutterBorder) {
    themeOptions[".cm-gutters"].borderRightColor = settings.gutterBorder;
  }
  if (settings.caret) {
    themeOptions[".cm-content"] = {
      caretColor: settings.caret
    };
    themeOptions[".cm-cursor, .cm-dropCursor"] = {
      borderLeftColor: settings.caret
    };
  }
  var activeLineGutterStyle = {};
  if (settings.gutterActiveForeground) {
    activeLineGutterStyle.color = settings.gutterActiveForeground;
  }
  if (settings.lineHighlight) {
    themeOptions[".cm-activeLine"] = {
      backgroundColor: settings.lineHighlight
    };
    activeLineGutterStyle.backgroundColor = settings.lineHighlight;
  }
  themeOptions[".cm-activeLineGutter"] = activeLineGutterStyle;
  if (settings.selection) {
    themeOptions["&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"] = {
      background: settings.selection + " !important"
    };
  }
  if (settings.selectionMatch) {
    themeOptions["& .cm-selectionMatch"] = {
      backgroundColor: settings.selectionMatch
    };
  }
  var themeExtension = EditorView.theme(themeOptions, {
    dark: theme === "dark"
  });
  var highlightStyle = HighlightStyle.define(styles);
  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];
  return extension;
};

// node_modules/@uiw/codemirror-theme-basic/esm/dark.js
var defaultSettingsBasicDark = {
  background: "#2E3235",
  foreground: "#DDDDDD",
  caret: "#DDDDDD",
  selection: "#202325",
  selectionMatch: "#202325",
  gutterBackground: "#292d30",
  gutterForeground: "#808080",
  gutterBorder: "1px solid #ffffff10",
  lineHighlight: "#B9D2FF30"
};
var basicDarkStyle = [{
  tag: tags.keyword,
  color: "#fda331"
}, {
  tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],
  color: "#b5bd68"
}, {
  tag: [tags.variableName],
  color: "#6fb3d2"
}, {
  tag: [tags.function(tags.variableName)],
  color: "#fda331"
}, {
  tag: [tags.labelName],
  color: "#fc6d24"
}, {
  tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
  color: "#fda331"
}, {
  tag: [tags.definition(tags.name), tags.separator],
  color: "#cc99cc"
}, {
  tag: [tags.brace],
  color: "#cc99cc"
}, {
  tag: [tags.annotation],
  color: "#fc6d24"
}, {
  tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
  color: "#fda331"
}, {
  tag: [tags.typeName, tags.className],
  color: "#6fb3d2"
}, {
  tag: [tags.operator, tags.operatorKeyword],
  color: "#cc99cc"
}, {
  tag: [tags.tagName],
  color: "#fda331"
}, {
  tag: [tags.squareBracket],
  color: "#cc99cc"
}, {
  tag: [tags.angleBracket],
  color: "#cc99cc"
}, {
  tag: [tags.attributeName],
  color: "#6fb3d2"
}, {
  tag: [tags.regexp],
  color: "#fda331"
}, {
  tag: [tags.quote],
  color: "#DDDDDD"
}, {
  tag: [tags.string],
  color: "#b5bd68"
}, {
  tag: tags.link,
  color: "#6987AF",
  textDecoration: "underline",
  textUnderlinePosition: "under"
}, {
  tag: [tags.url, tags.escape, tags.special(tags.string)],
  color: "#8abeb7"
}, {
  tag: [tags.meta],
  color: "#A54543"
}, {
  tag: [tags.comment],
  color: "#808080",
  fontStyle: "italic"
}, {
  tag: tags.monospace,
  color: "#DDDDDD"
}, {
  tag: tags.strong,
  fontWeight: "bold",
  color: "#fda331"
}, {
  tag: tags.emphasis,
  fontStyle: "italic",
  color: "#6fb3d2"
}, {
  tag: tags.strikethrough,
  textDecoration: "line-through"
}, {
  tag: tags.heading,
  fontWeight: "bold",
  color: "#DDDDDD"
}, {
  tag: tags.special(tags.heading1),
  fontWeight: "bold",
  color: "#DDDDDD"
}, {
  tag: tags.heading1,
  fontWeight: "bold",
  color: "#DDDDDD"
}, {
  tag: [tags.heading2, tags.heading3, tags.heading4],
  fontWeight: "bold",
  color: "#DDDDDD"
}, {
  tag: [tags.heading5, tags.heading6],
  color: "#DDDDDD"
}, {
  tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
  color: "#8abeb7"
}, {
  tag: [tags.processingInstruction, tags.inserted],
  color: "#8abeb7"
}, {
  tag: [tags.contentSeparator],
  color: "#6fb3d2"
}, {
  tag: tags.invalid,
  color: "#B9D2FF",
  borderBottom: "1px dotted #fc6d24"
}];
var basicDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsBasicDark, settings),
    styles: [...basicDarkStyle, ...styles]
  });
};
var basicDark = basicDarkInit();

// node_modules/@uiw/codemirror-theme-basic/esm/light.js
init_extends();
var defaultSettingsBasicLight = {
  background: "#ffffff",
  foreground: "#2e3440",
  caret: "#3b4252",
  selection: "#eceff4",
  selectionMatch: "#e5e9f0",
  gutterBackground: "#eceff4",
  gutterForeground: "#2e3440",
  gutterBorder: "none",
  lineHighlight: "#02255f11"
};
var basicLightStyle = [{
  tag: tags.keyword,
  color: "#5e81ac"
}, {
  tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],
  color: "#d08770"
}, {
  tag: [tags.variableName],
  color: "#d08770"
}, {
  tag: [tags.function(tags.variableName)],
  color: "#5e81ac"
}, {
  tag: [tags.labelName],
  color: "#81a1c1"
}, {
  tag: [tags.color, tags.constant(tags.name), tags.standard(tags.name)],
  color: "#5e81ac"
}, {
  tag: [tags.definition(tags.name), tags.separator],
  color: "#a3be8c"
}, {
  tag: [tags.brace],
  color: "#8fbcbb"
}, {
  tag: [tags.annotation],
  color: "#d30102"
}, {
  tag: [tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],
  color: "#88c0d0"
}, {
  tag: [tags.typeName, tags.className],
  color: "#ebcb8b"
}, {
  tag: [tags.operator, tags.operatorKeyword],
  color: "#a3be8c"
}, {
  tag: [tags.tagName],
  color: "#b48ead"
}, {
  tag: [tags.squareBracket],
  color: "#bf616a"
}, {
  tag: [tags.angleBracket],
  color: "#d08770"
}, {
  tag: [tags.attributeName],
  color: "#ebcb8b"
}, {
  tag: [tags.regexp],
  color: "#5e81ac"
}, {
  tag: [tags.quote],
  color: "#3b4252"
}, {
  tag: [tags.string],
  color: "#d08770"
}, {
  tag: tags.link,
  color: "#8fbcbb",
  textDecoration: "underline",
  textUnderlinePosition: "under"
}, {
  tag: [tags.url, tags.escape, tags.special(tags.string)],
  color: "#d08770"
}, {
  tag: [tags.meta],
  color: "#88c0d0"
}, {
  tag: [tags.comment],
  color: "#434c5e",
  fontStyle: "italic"
}, {
  tag: tags.strong,
  fontWeight: "bold",
  color: "#5e81ac"
}, {
  tag: tags.emphasis,
  fontStyle: "italic",
  color: "#5e81ac"
}, {
  tag: tags.strikethrough,
  textDecoration: "line-through"
}, {
  tag: tags.heading,
  fontWeight: "bold",
  color: "#5e81ac"
}, {
  tag: tags.special(tags.heading1),
  fontWeight: "bold",
  color: "#5e81ac"
}, {
  tag: tags.heading1,
  fontWeight: "bold",
  color: "#5e81ac"
}, {
  tag: [tags.heading2, tags.heading3, tags.heading4],
  fontWeight: "bold",
  color: "#5e81ac"
}, {
  tag: [tags.heading5, tags.heading6],
  color: "#5e81ac"
}, {
  tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
  color: "#d08770"
}, {
  tag: [tags.processingInstruction, tags.inserted],
  color: "#8fbcbb"
}, {
  tag: [tags.contentSeparator],
  color: "#ebcb8b"
}, {
  tag: tags.invalid,
  color: "#434c5e",
  borderBottom: "1px dotted #d30102"
}];
var basicLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsBasicLight, settings),
    styles: [...basicLightStyle, ...styles]
  });
};
var basicLight = basicLightInit();
export {
  basicDark,
  basicDarkInit,
  basicDarkStyle,
  basicLight,
  basicLightInit,
  basicLightStyle,
  defaultSettingsBasicDark,
  defaultSettingsBasicLight
};
//# sourceMappingURL=@uiw_codemirror-theme-basic.js.map
